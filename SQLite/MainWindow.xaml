<Window x:Class="SQLite.MainWindow"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:viewModel="clr-namespace:SQLiteTool.ViewModels"
        Title="Material Design in XAML"
        Width="1100"
        Height="800"
        d:DataContext="{d:DesignInstance viewModel:MainWindowViewModel}"
        AutomationProperties.Name="{Binding Title, RelativeSource={RelativeSource Self}}"
        Icon="favicon.ico"
        Style="{StaticResource MaterialDesignWindow}"
        WindowStartupLocation="CenterScreen"
        mc:Ignorable="d">
    <Window.CommandBindings>
        <CommandBinding Command="Copy" Executed="OnCopy" />
    </Window.CommandBindings>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- data template used for the dialogs example, defines a View for a ViewModel of type DateTime -->
            <DataTemplate DataType="{x:Type system:DateTime}">
                <StackPanel Margin="16">
                    <TextBlock Text="England win the World Cup:" />
                    <TextBlock Margin="0,8,0,0" Text="{Binding}" />
                    <TextBlock Margin="0,8,0,0" Text="You will never see that again." />
                    <Button Margin="0,8,0,0"
                  Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                  Content="AWESOME"
                  IsDefault="True"
                  Style="{StaticResource MaterialDesignFlatButton}" />
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <materialDesign:DialogHost DialogTheme="Inherit"
                             Identifier="RootDialog"
                             SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">

        <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="220">
                    <ToggleButton Margin="16"
                        HorizontalAlignment="Right"
                        DockPanel.Dock="Top"
                        IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}"
                        Style="{StaticResource MaterialDesignHamburgerToggleButton}" />
                    <ListBox x:Name="ItemsListBox"
                   Margin="0,16,0,16"
                   AutomationProperties.Name="PagesListBox"
                   ItemsSource="{Binding Items}"
                   PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp"
                   SelectedIndex="{Binding SelectedIndex}"
                   SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}"
                   Style="{StaticResource MaterialDesignNavigationPrimaryListBox}">
                        <ListBox.Resources>
                            <Style TargetType="ScrollBar" BasedOn="{StaticResource MaterialDesignScrollBarMinimal}" />
                        </ListBox.Resources>
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="viewModels:Item">
                                <TextBlock Margin="24,4,0,4"
                           AutomationProperties.AutomationId="ItemPage"
                           Text="{Binding Name}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>

            <DockPanel>
                <materialDesign:ColorZone Padding="16"
                                  materialDesign:ElevationAssist.Elevation="Dp4"
                                  DockPanel.Dock="Top"
                                  Mode="PrimaryMid">

                </materialDesign:ColorZone>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <!--<ScrollViewer x:Name="MainScrollViewer"
                        Grid.Row="1"
                        materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True"
                        HorizontalScrollBarVisibility="{Binding SelectedItem.HorizontalScrollBarVisibilityRequirement, FallbackValue=Disabled}"
                        VerticalScrollBarVisibility="{Binding SelectedItem.VerticalScrollBarVisibilityRequirement, FallbackValue=Disabled}">
                        <ContentControl Margin="{Binding MarginRequirement, FallbackValue=16}"
                            Content="{Binding Content, UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}}"
                            DataContext="{Binding SelectedItem}"
                            DataContextChanged="OnSelectedItemChanged" />
                    </ScrollViewer>-->

                    <materialDesign:Snackbar x:Name="MainSnackbar"
                                   Grid.Row="1"
                                   MessageQueue="{materialDesign:MessageQueue}" />
                </Grid>
            </DockPanel>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>
